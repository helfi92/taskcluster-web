{
  "$schema": "/schemas/common/api-reference-v0.json#",
  "title": "Login API",
  "description": "The Login service serves as the interface between external authentication\nsystems and Taskcluster credentials.",
  "serviceName": "login",
  "apiVersion": "v1",
  "entries": [
    {
      "type": "function",
      "method": "get",
      "route": "/ping",
      "query": [],
      "args": [],
      "name": "ping",
      "stability": "stable",
      "title": "Ping Server",
      "description": "Respond without doing anything.\nThis endpoint is used to check that the service is up."
    },
    {
      "type": "function",
      "method": "get",
      "route": "/oidc-credentials/<provider>",
      "query": [],
      "args": [
        "provider"
      ],
      "name": "oidcCredentials",
      "stability": "experimental",
      "title": "Get Taskcluster credentials given a suitable `access_token`",
      "output": "v1/oidc-credentials-response.json#",
      "description": "Given an OIDC `access_token` from a trusted OpenID provider, return a\nset of Taskcluster credentials for use on behalf of the identified\nuser.\n\nThis method is typically not called with a Taskcluster client library\nand does not accept Hawk credentials. The `access_token` should be\ngiven in an `Authorization` header:\n```\nAuthorization: Bearer abc.xyz\n```\n\nThe `access_token` is first verified against the named\n:provider, then passed to the provider's APIBuilder to retrieve a user\nprofile. That profile is then used to generate Taskcluster credentials\nappropriate to the user. Note that the resulting credentials may or may\nnot include a `certificate` property. Callers should be prepared for either\nalternative.\n\nThe given credentials will expire in a relatively short time. Callers should\nmonitor this expiration and refresh the credentials if necessary, by calling\nthis endpoint again, if they have expired."
    }
  ]
}