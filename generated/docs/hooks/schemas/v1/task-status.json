{
  "$schema": "/schemas/common/metaschema.json#",
  "title": "Task Status Structure",
  "description": "A representation of **task status** as known by the queue\n",
  "type": "object",
  "properties": {
    "status": {
      "type": "object",
      "properties": {
        "taskId": {
          "title": "Task Identifier",
          "description": "Unique task identifier, this is UUID encoded as\n[URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and\nstripped of `=` padding.\n",
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$"
        },
        "provisionerId": {
          "title": "Provisioner Id",
          "description": "Unique identifier for the provisioner that this task must be scheduled on\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 22,
          "pattern": "^([a-zA-Z0-9-_]*)$"
        },
        "workerType": {
          "title": "Worker Type",
          "description": "Identifier for worker type within the specified provisioner\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 22,
          "pattern": "^([a-zA-Z0-9-_]*)$"
        },
        "schedulerId": {
          "title": "Scheduler Identifier",
          "description": "Identifier for the scheduler that _defined_ this task.\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 22,
          "pattern": "^([a-zA-Z0-9-_]*)$"
        },
        "taskGroupId": {
          "title": "Task-Group Identifier",
          "description": "Identifier for a group of tasks scheduled together with this task, by\nscheduler identified by `schedulerId`. For tasks scheduled by the\ntask-graph scheduler, this is the `taskGraphId`.\n",
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$"
        },
        "deadline": {
          "title": "Deadline",
          "description": "Deadline of the task, `pending` and `running` runs are\nresolved as **exception** if not resolved by other means\nbefore the deadline. Note, deadline cannot be more than\n5 days into the future\n",
          "type": "string",
          "format": "date-time"
        },
        "expires": {
          "title": "Expiration",
          "description": "Task expiration, time at which task definition and\nstatus is deleted. Notice that all artifacts for the task\nmust have an expiration that is no later than this.\n",
          "type": "string",
          "format": "date-time"
        },
        "retriesLeft": {
          "title": "Retries Left",
          "description": "Number of retries left for the task in case of infrastructure issues\n",
          "type": "integer",
          "minimum": 0,
          "maximum": 999
        },
        "state": {
          "title": "State",
          "description": "State of this task. This is just an auxiliary property derived from state\nof latests run, or `unscheduled` if none.\n",
          "type": "string",
          "enum": [
            "unscheduled",
            "pending",
            "running",
            "completed",
            "failed",
            "exception"
          ]
        },
        "runs": {
          "title": "List of Runs",
          "description": "List of runs, ordered so that index `i` has `runId == i`\n",
          "type": "array",
          "items": {
            "title": "Run Information",
            "description": "JSON object with information about a run\n",
            "type": "object",
            "properties": {
              "runId": {
                "title": "Run Identifier",
                "description": "Id of this task run, `run-id`s always starts from `0`\n",
                "type": "integer",
                "minimum": 0,
                "maximum": 1000
              },
              "state": {
                "title": "Run State",
                "description": "State of this run\n",
                "type": "string",
                "enum": [
                  "pending",
                  "running",
                  "completed",
                  "failed",
                  "exception"
                ]
              },
              "reasonCreated": {
                "title": "Reason Created",
                "description": "Reason for the creation of this run,\n**more reasons may be added in the future**.\n",
                "type": "string",
                "enum": [
                  "scheduled",
                  "retry",
                  "task-retry",
                  "rerun",
                  "exception"
                ]
              },
              "reasonResolved": {
                "title": "Reason Resolved",
                "description": "Reason that run was resolved, this is mainly\nuseful for runs resolved as `exception`.\nNote, **more reasons may be added in the future**, also this\nproperty is only available after the run is resolved.\n",
                "type": "string",
                "enum": [
                  "completed",
                  "failed",
                  "deadline-exceeded",
                  "canceled",
                  "superseded",
                  "claim-expired",
                  "worker-shutdown",
                  "malformed-payload",
                  "resource-unavailable",
                  "internal-error",
                  "intermittent-task"
                ]
              },
              "workerGroup": {
                "title": "Worker Group",
                "description": "Identifier for group that worker who executes this run is a part of,\nthis identifier is mainly used for efficient routing.\nNote, this property is only present after the run is claimed.\n",
                "type": "string",
                "minLength": 1,
                "maxLength": 22,
                "pattern": "^([a-zA-Z0-9-_]*)$"
              },
              "workerId": {
                "title": "Worker Identifier",
                "description": "Identifier for worker evaluating this run within given\n`workerGroup`. Note, this property is only available after the run\nhas been claimed.\n",
                "type": "string",
                "minLength": 1,
                "maxLength": 22,
                "pattern": "^([a-zA-Z0-9-_]*)$"
              },
              "takenUntil": {
                "title": "Taken Until",
                "description": "Time at which the run expires and is resolved as `failed`, if the\nrun isn't reclaimed. Note, only present after the run has been\nclaimed.\n",
                "type": "string",
                "format": "date-time"
              },
              "scheduled": {
                "title": "Scheduled",
                "description": "Date-time at which this run was scheduled, ie. when the run was\ncreated in state `pending`.\n",
                "type": "string",
                "format": "date-time"
              },
              "started": {
                "title": "Started",
                "description": "Date-time at which this run was claimed, ie. when the run changed\nstate from `pending` to `running`. This property is only present\nafter the run has been claimed.\n",
                "type": "string",
                "format": "date-time"
              },
              "resolved": {
                "title": "Resolved",
                "description": "Date-time at which this run was resolved, ie. when the run changed\nstate from `running` to either `completed`, `failed` or `exception`.\nThis property is only present after the run as been resolved.\n",
                "type": "string",
                "format": "date-time"
              }
            },
            "additionalProperties": false,
            "required": [
              "runId",
              "state",
              "reasonCreated",
              "scheduled"
            ]
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "taskId",
        "provisionerId",
        "workerType",
        "schedulerId",
        "taskGroupId",
        "deadline",
        "expires",
        "retriesLeft",
        "state",
        "runs"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "status"
  ],
  "$id": "/schemas/hooks/v1/task-status.json#"
}