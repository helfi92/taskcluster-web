{
  "$schema": "/schemas/common/api-reference-v0.json#",
  "title": "Notification Service",
  "description": "The notification service listens for tasks with associated notifications\nand handles requests to send emails and post pulse messages.",
  "serviceName": "notify",
  "apiVersion": "v1",
  "entries": [
    {
      "type": "function",
      "method": "get",
      "route": "/ping",
      "query": [],
      "args": [],
      "name": "ping",
      "stability": "stable",
      "title": "Ping Server",
      "description": "Respond without doing anything.\nThis endpoint is used to check that the service is up."
    },
    {
      "type": "function",
      "method": "post",
      "route": "/email",
      "query": [],
      "args": [],
      "name": "email",
      "stability": "experimental",
      "title": "Send an Email",
      "input": "v1/email-request.json#",
      "description": "Send an email to `address`. The content is markdown and will be rendered\nto HTML, but both the HTML and raw markdown text will be sent in the\nemail. If a link is included, it will be rendered to a nice button in the\nHTML version of the email",
      "scopes": "notify:email:<address>"
    },
    {
      "type": "function",
      "method": "post",
      "route": "/pulse",
      "query": [],
      "args": [],
      "name": "pulse",
      "stability": "experimental",
      "title": "Publish a Pulse Message",
      "input": "v1/pulse-request.json#",
      "description": "Publish a message on pulse with the given `routingKey`.",
      "scopes": "notify:pulse:<routingKey>"
    },
    {
      "type": "function",
      "method": "post",
      "route": "/irc",
      "query": [],
      "args": [],
      "name": "irc",
      "stability": "experimental",
      "title": "Post IRC Message",
      "input": "v1/irc-request.json#",
      "description": "Post a message on IRC to a specific channel or user, or a specific user\non a specific channel.\n\nSuccess of this API method does not imply the message was successfully\nposted. This API method merely inserts the IRC message into a queue\nthat will be processed by a background process.\nThis allows us to re-send the message in face of connection issues.\n\nHowever, if the user isn't online the message will be dropped without\nerror. We maybe improve this behavior in the future. For now just keep\nin mind that IRC is a best-effort service.",
      "scopes": {
        "if": "channelRequest",
        "then": "notify:irc-channel:<channel>",
        "else": "notify:irc-user:<user>"
      }
    }
  ]
}