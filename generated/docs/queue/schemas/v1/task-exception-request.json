{
  "$schema": "/schemas/common/metaschema.json#",
  "title": "Task Exception Request",
  "description": "Request for a run of a task to be resolved with an exception\n",
  "type": "object",
  "properties": {
    "reason": {
      "type": "string",
      "enum": [
        "worker-shutdown",
        "malformed-payload",
        "resource-unavailable",
        "internal-error",
        "superseded",
        "intermittent-task"
      ],
      "description": "Reason that the task is resolved with an exception. This is a subset\nof the values for `resolvedReason` given in the task status structure.\n**Report `worker-shutdown`** if the run failed because the worker\nhad to shutdown (spot node disappearing). In case of `worker-shutdown`\nthe queue will immediately **retry** the task, by making a new run.\nThis is much faster than ignoreing the issue and letting the task _retry_\nby claim expiration. For any other _reason_ reported the queue will not\nretry the task.\n**Report `malformed-payload`** if the `task.payload` doesn't match the\nschema for the worker payload, or referenced resource doesn't exists.\nIn either case, you should still log the error to a log file for the\nspecific run.\n**Report `resource-unavailable`** if a resource/service needed or\nreferenced in `task.payload` is _temporarily_ unavailable. Do not use this\nunless you know the resource exists, if the resource doesn't exist you\nshould report `malformed-payload`. Example use-case if you contact the\nindex (a service) on behalf of the task, because of a declaration in\n`task.payload`, and the service (index) is temporarily down. Don't use\nthis if a URL returns 404, but if it returns 503 or hits a timeout when\nyou retry the request, then this _may_ be a valid exception. The queue\nassumes that workers have applied retries as needed, and will not retry\n the task.\n**Report `internal-error`** if the worker experienced an unhandled internal\nerror from which it couldn't recover. The queue will not retry runs\nresolved with this reason, but you are clearly signaling that this is a\nbug in the worker code.\n**Report `superseded`** if the task was determined to have been\nsuperseded by another task, and its results are no longer needed.  It is\nconvention in this case to create an artifact entitled\n`public/superseded-by` containing the taskId of the task that superseded\nthis one.\n**Report `intermittent-task`** if the task explicitly requested a retry\nbecause task is intermittent. Workers can choose whether or not to\nsupport this, but workers shouldn't blindly report this for every task\nthat fails.\n"
    }
  },
  "additionalProperties": false,
  "required": [
    "reason"
  ],
  "$id": "/schemas/queue/v1/task-exception-request.json#"
}