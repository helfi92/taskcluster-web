{
  "$schema": "/schemas/common/metaschema.json#",
  "title": "Artifact Created Message",
  "description": "Message reporting a new artifact has been created for a given task.\n",
  "type": "object",
  "properties": {
    "version": {
      "description": "Message version",
      "type": "integer",
      "enum": [
        1
      ]
    },
    "status": {
      "$ref": "task-status.json#"
    },
    "runId": {
      "description": "Id of the run on which artifact was created.\n",
      "type": "integer",
      "minimum": 0,
      "maximum": 1000
    },
    "workerGroup": {
      "description": "Identifier for the worker-group within which the run with the created\nartifacted is running.\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^([a-zA-Z0-9-_]*)$"
    },
    "workerId": {
      "description": "Identifier for the worker within which the run with the created artifact\nis running.\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^([a-zA-Z0-9-_]*)$"
    },
    "artifact": {
      "title": "Artifact",
      "description": "Information about the artifact that was created\n",
      "type": "object",
      "properties": {
        "storageType": {
          "title": "Artifact Storage-Type",
          "description": "This is the `storageType` for the request that was used to create the\nartifact.\n",
          "type": "string",
          "enum": [
            "blob",
            "reference",
            "error"
          ]
        },
        "name": {
          "title": "Artifact Name",
          "description": "Name of the artifact that was created, this is useful if you want to\nattempt to fetch the artifact. But keep in mind that just because an\nartifact is created doesn't mean that it's immediately available.\n",
          "type": "string",
          "maxLength": 1024
        },
        "expires": {
          "title": "Artifact Expiration",
          "description": "Date and time after which the artifact created will be automatically\ndeleted by the queue.\n",
          "type": "string",
          "format": "date-time"
        },
        "contentType": {
          "title": "Content-Type",
          "description": "Mimetype for the artifact that was created.\n",
          "type": "string",
          "maxLength": 255
        }
      },
      "additionalProperties": false,
      "required": [
        "storageType",
        "name",
        "expires",
        "contentType"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "version",
    "status",
    "runId",
    "workerGroup",
    "workerId",
    "artifact"
  ],
  "$id": "/schemas/queue/v1/artifact-created-message.json#"
}