{
  "$schema": "/schemas/common/metaschema.json#",
  "title": "Worker Response",
  "description": "Response containing information about a worker.\n",
  "type": "object",
  "properties": {
    "provisionerId": {
      "title": "Provisioner ID",
      "type": "string",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^([a-zA-Z0-9-_]*)$"
    },
    "workerType": {
      "type": "string",
      "title": "WorkerType name",
      "description": "WorkerType name.\n",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^([a-zA-Z0-9-_]*)$"
    },
    "workerGroup": {
      "title": "Worker Group",
      "description": "Identifier for group that worker who executes this run is a part of,\nthis identifier is mainly used for efficient routing.\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^([a-zA-Z0-9-_]*)$"
    },
    "workerId": {
      "title": "Worker Identifier",
      "description": "Identifier for worker evaluating this run within given\n`workerGroup`.\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^([a-zA-Z0-9-_]*)$"
    },
    "recentTasks": {
      "title": "Most Recent Tasks",
      "description": "List of 20 most recent tasks claimed by the worker.\n",
      "type": "array",
      "items": {
        "$ref": "task-run.json#"
      }
    },
    "expires": {
      "title": "Worker Expiration",
      "description": "Date and time after which the worker will be automatically\ndeleted by the queue.\n",
      "type": "string",
      "format": "date-time"
    },
    "quarantineUntil": {
      "title": "Worker Quarantine",
      "description": "Quarantining a worker allows the machine to remain alive but not accept jobs.\nOnce the quarantineUntil time has elapsed, the worker resumes accepting jobs.\nNote that a quarantine can be lifted by setting `quarantineUntil` to the present time (or\nsomewhere in the past).\n",
      "type": "string",
      "format": "date-time"
    },
    "firstClaim": {
      "title": "First task claimed",
      "description": "Date of the first time this worker claimed a task.\n",
      "type": "string",
      "format": "date-time"
    },
    "actions": {
      "title": "Worker Actions",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Worker Action",
        "description": "Actions provide a generic mechanism to expose additional features of a\nprovisioner, worker type, or worker to Taskcluster clients.\n\nAn action is comprised of metadata describing the feature it exposes,\ntogether with a webhook for triggering it.\n\nThe Taskcluster tools site, for example, retrieves actions when displaying\nprovisioners, worker types and workers. It presents the provisioner/worker\ntype/worker specific actions to the user. When the user triggers an action,\nthe web client takes the registered webhook, substitutes parameters into the\nURL (see `url`), signs the requests with the Taskcluster credentials of the\nuser operating the web interface, and issues the HTTP request.\n\nThe level to which the action relates (provisioner, worker type, worker) is\ncalled the action context. All actions, regardless of the action contexts,\nare registered against the provisioner when calling\n`queue.declareProvisioner`.\n\nThe action context is used by the web client to determine where in the web\ninterface to present the action to the user as follows:\n\n| `context`   | Tool where action is displayed |\n|-------------|--------------------------------|\n| provisioner | Provisioner Explorer           |\n| worker-type | Workers Explorer               |\n| worker      | Worker Explorer                |\n\nSee [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)\nfor more information.\n",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Short names for things like logging/error messages.\n",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "description": "Appropriate title for any sort of Modal prompt.\n"
          },
          "context": {
            "title": "Context",
            "description": "Only actions with the context `worker` are included.\n",
            "type": "string",
            "enum": [
              "worker"
            ]
          },
          "url": {
            "title": "URL",
            "description": "When an action is triggered, a request is made using the `url` and `method`.\nDepending on the `context`, the following parameters will be substituted in the url:\n\n| `context`   | Path parameters                                          |\n|-------------|----------------------------------------------------------|\n| provisioner | <provisionerId>                                          |\n| worker-type | <provisionerId>, <workerType>                            |\n| worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |\n\n_Note: The request needs to be signed with the user's Taskcluster credentials._\n",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "description": "Method to indicate the desired action to be performed for a given resource.\n",
            "type": "string",
            "enum": [
              "POST",
              "PUT",
              "DELETE",
              "PATCH"
            ]
          },
          "description": {
            "title": "Description",
            "description": "Description of the provisioner.\n",
            "type": "string"
          }
        },
        "required": [
          "name",
          "title",
          "context",
          "url",
          "method",
          "description"
        ],
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "provisionerId",
    "workerType",
    "workerGroup",
    "workerId",
    "recentTasks",
    "expires",
    "firstClaim",
    "actions"
  ],
  "$id": "/schemas/queue/v1/worker-response.json#"
}