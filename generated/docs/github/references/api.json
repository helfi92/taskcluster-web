{
  "$schema": "/schemas/common/api-reference-v0.json#",
  "title": "Taskcluster GitHub API Documentation",
  "description": "The github service is responsible for creating tasks in reposnse\nto GitHub events, and posting results to the GitHub UI.\n\nThis document describes the API end-point for consuming GitHub\nweb hooks, as well as some useful consumer APIs.\n\nWhen Github forbids an action, this service returns an HTTP 403\nwith code ForbiddenByGithub.",
  "serviceName": "github",
  "apiVersion": "v1",
  "entries": [
    {
      "type": "function",
      "method": "get",
      "route": "/ping",
      "query": [],
      "args": [],
      "name": "ping",
      "stability": "stable",
      "title": "Ping Server",
      "description": "Respond without doing anything.\nThis endpoint is used to check that the service is up."
    },
    {
      "type": "function",
      "method": "post",
      "route": "/github",
      "query": [],
      "args": [],
      "name": "githubWebHookConsumer",
      "stability": "experimental",
      "title": "Consume GitHub WebHook",
      "description": "Capture a GitHub event and publish it via pulse, if it's a push,\nrelease or pull request."
    },
    {
      "type": "function",
      "method": "get",
      "route": "/builds",
      "query": [
        "continuationToken",
        "limit",
        "organization",
        "repository",
        "sha"
      ],
      "args": [],
      "name": "builds",
      "stability": "experimental",
      "title": "List of Builds",
      "output": "v1/build-list.json#",
      "description": "A paginated list of builds that have been run in\nTaskcluster. Can be filtered on various git-specific\nfields."
    },
    {
      "type": "function",
      "method": "get",
      "route": "/repository/<owner>/<repo>/<branch>/badge.svg",
      "query": [],
      "args": [
        "owner",
        "repo",
        "branch"
      ],
      "name": "badge",
      "stability": "experimental",
      "title": "Latest Build Status Badge",
      "description": "Checks the status of the latest build of a given branch\nand returns corresponding badge svg."
    },
    {
      "type": "function",
      "method": "get",
      "route": "/repository/<owner>/<repo>",
      "query": [],
      "args": [
        "owner",
        "repo"
      ],
      "name": "repository",
      "stability": "experimental",
      "title": "Get Repository Info",
      "output": "v1/repository.json#",
      "description": "Returns any repository metadata that is\nuseful within Taskcluster related services."
    },
    {
      "type": "function",
      "method": "get",
      "route": "/repository/<owner>/<repo>/<branch>/latest",
      "query": [],
      "args": [
        "owner",
        "repo",
        "branch"
      ],
      "name": "latest",
      "stability": "experimental",
      "title": "Latest Status for Branch",
      "description": "For a given branch of a repository, this will always point\nto a status page for the most recent task triggered by that\nbranch.\n\nNote: This is a redirect rather than a direct link."
    },
    {
      "type": "function",
      "method": "post",
      "route": "/repository/<owner>/<repo>/statuses/<sha>",
      "query": [],
      "args": [
        "owner",
        "repo",
        "sha"
      ],
      "name": "createStatus",
      "stability": "experimental",
      "title": "Post a status against a given changeset",
      "input": "v1/create-status.json#",
      "description": "For a given changeset (SHA) of a repository, this will attach a \"commit status\"\non github. These statuses are links displayed next to each revision.\nThe status is either OK (green check) or FAILURE (red cross), \nmade of a custom title and link.",
      "scopes": "github:create-status:<owner>/<repo>"
    },
    {
      "type": "function",
      "method": "post",
      "route": "/repository/<owner>/<repo>/issues/<number>/comments",
      "query": [],
      "args": [
        "owner",
        "repo",
        "number"
      ],
      "name": "createComment",
      "stability": "experimental",
      "title": "Post a comment on a given GitHub Issue or Pull Request",
      "input": "v1/create-comment.json#",
      "description": "For a given Issue or Pull Request of a repository, this will write a new message.",
      "scopes": "github:create-comment:<owner>/<repo>"
    }
  ]
}