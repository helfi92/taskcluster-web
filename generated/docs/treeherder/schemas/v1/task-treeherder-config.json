{
  "$schema": "/schemas/common/metaschema.json#",
  "title": "Treeherder Configuration",
  "description": "Definition of the Treeherder configuration data that can be contained within\na task definition under task.extra.treeherder.  This information is useful for\ndetermining job properties to report to Treeherder.\n",
  "type": "object",
  "properties": {
    "reason": {
      "description": "Examples include:\n- scheduled\n- scheduler\n- Self-serve: Rebuilt by foo@example.com\n- Self-serve: Requested by foo@example.com\n- The Nightly scheduler named 'b2g_mozilla-inbound periodic' triggered this build\n- unknown\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 125
    },
    "tier": {
      "type": "integer",
      "description": "Tiers are used for classifying jobs according to the Sheriffing policy.\nThese jobs can be hidden based on exclusion profiles within Treeherder and\ndisplay of these jobs toggled by UI settings.\n\nBy default jobs which do not specify a tier will be classified as Tier 1.\n",
      "minimum": 1,
      "maximum": 3
    },
    "jobKind": {
      "type": "string",
      "description": "jobKind specifies the type of task that should be reported to Treeherder.\nThe jobKind could cause Treeherder to display/treat the task differently.\nFor instance, tasks with a jobKind of 'build' will be reported as red when\nthe task fails, 'test' as orange, and any jobs not specifying jobKind or\n'other' will be red.\n",
      "default": "other",
      "enum": [
        "build",
        "test",
        "other"
      ]
    },
    "machine": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "string",
          "description": "The platform specified here maps to platforms that Treeherder recognizes.\nJobs with the same platform will be displayed within the same row on\nTreeherder and obey any ordering that is defined'.\n\nIf no build platform is specified, the workerType specified for the job\nwill be used.\n",
          "pattern": "^[A-Za-z0-9_-]+$",
          "minLength": 1,
          "maxLength": 50
        },
        "os": {
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]+$",
          "minLength": 1,
          "maxLength": 25
        },
        "architecture": {
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]+$",
          "minLength": 1,
          "maxLength": 25
        }
      },
      "additionalProperties": false,
      "required": [
        "platform"
      ]
    },
    "labels": {
      "title": "labels",
      "description": "Labels are a dimension of a platform.  The values here can vary wildly,\nso most strings are valid for this.  The list of labels that are used\nis malleable going forward.\n\nThese were formerly known as \"Collection\" calling labels now so they\ncan be understood to be just strings that denotes a characteristic of the job.\n\nThese labels will be used for grouping jobs with a particular job platform.\nFor instance, a job with the label \"debug\" will be put into the debug platform\non Treeherder.  By default, if no label is specified, the job will be classified\nas \"opt\"\n\nSome examples of labels that have been used:\n  opt    Optimize Compiler GCC optimize flags\n  debug  Debug flags passed in\n  pgo    Profile Guided Optimization - Like opt, but runs with profiling, then builds again using that profiling\n  asan   Address Sanitizer\n  tsan   Thread Sanitizer Build\n",
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50,
        "pattern": "^[A-Za-z0-9_-]+$"
      }
    },
    "symbol": {
      "title": "symbol",
      "description": "This is the symbol that will appear in a Treeherder resultset for a\ngiven push.  This symbol could be something such as \"B\" or a number representing\nthe current chunk.\n",
      "type": "string",
      "minLength": 0,
      "maxLength": 25
    },
    "groupName": {
      "title": "group name",
      "type": "string",
      "minLength": 1,
      "maxLength": 100
    },
    "groupSymbol": {
      "title": "group symbol",
      "description": "Group Symbol is the symbol that job symbols will be grouped under.  This\nis useful if there is a particular group of jobs that should be displayed\ntogether.  For example, a test suite named \"Media Tests\" with the group symbol\nof \"ME\" would have all jobs with that group symbol appear as\nME(symbol 1, symbol 2, ...).\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 25
    },
    "productName": {
      "description": "Examples include:\n-  'b2g'\n-  'firefox'\n-  'taskcluster'\n-  'xulrunner'\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 125
    }
  },
  "required": [
    "symbol"
  ],
  "additionalProperties": true,
  "$id": "/schemas/treeherder/v1/task-treeherder-config.json#"
}