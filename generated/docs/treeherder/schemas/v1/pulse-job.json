{
  "$schema": "/schemas/common/metaschema.json#",
  "title": "Job Definition",
  "description": "Definition of a single job that can be added to Treeherder\nProject is determined by the routing key, so we don't need to specify it here.\n",
  "type": "object",
  "properties": {
    "taskId": {
      "title": "Task ID",
      "description": "This could just be what was formerly submitted as a job_guid in the\nREST API.\n",
      "type": "string",
      "pattern": "^[A-Za-z0-9/+-]+$",
      "minLength": 1,
      "maxLength": 50
    },
    "retryId": {
      "title": "Retry ID",
      "description": "The infrastructure retry iteration on this job.  The number of times this\njob has been retried by the infrastructure.\nIf it's the 1st time running, then it should be 0. If this is the first\nretry, it will be 1, etc.\n",
      "type": "integer",
      "default": 0,
      "minimum": 0
    },
    "isRetried": {
      "description": "True indicates this job has been retried.",
      "type": "boolean"
    },
    "buildSystem": {
      "description": "The name of the build system that initiated this content.  Some examples\nare \"buildbot\" and \"taskcluster\".  But this could be any name.  This\nvalue will be used in the routing key for retriggering jobs in the\npublish-job-action task.\n",
      "type": "string",
      "pattern": "^[\\w-]+$",
      "minLength": 1,
      "maxLength": 25
    },
    "origin": {
      "oneOf": [
        {
          "type": "object",
          "description": "PREFERRED: An HG job that only has a revision.  This is for all\njobs going forward.\n",
          "additionalProperties": false,
          "title": "HG Push",
          "properties": {
            "kind": {
              "type": "string",
              "enum": [
                "hg.mozilla.org"
              ]
            },
            "project": {
              "type": "string",
              "pattern": "^[\\w-]+$",
              "minLength": 1,
              "maxLength": 50
            },
            "revision": {
              "type": "string",
              "pattern": "^[0-9a-f]+$",
              "minLength": 40,
              "maxLength": 40
            },
            "pushLogID": {
              "type": "integer"
            }
          },
          "required": [
            "kind",
            "project",
            "revision"
          ]
        },
        {
          "type": "object",
          "title": "Github Pull Request",
          "additionalProperties": false,
          "properties": {
            "kind": {
              "type": "string",
              "enum": [
                "github.com"
              ]
            },
            "owner": {
              "description": "This could be the organization or the individual git username\ndepending on who owns the repo.\n",
              "type": "string",
              "pattern": "^[\\w-]+$",
              "minLength": 1,
              "maxLength": 50
            },
            "project": {
              "type": "string",
              "pattern": "^[\\w-]+$",
              "minLength": 1,
              "maxLength": 50
            },
            "revision": {
              "type": "string",
              "minLength": 40,
              "maxLength": 40
            },
            "pullRequestID": {
              "type": "integer"
            }
          },
          "required": [
            "kind",
            "project",
            "revision"
          ]
        }
      ]
    },
    "display": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "jobSymbol": {
          "title": "Job Symbol",
          "type": "string",
          "minLength": 0,
          "maxLength": 25
        },
        "chunkId": {
          "title": "Chunk ID",
          "type": "integer",
          "minimum": 1
        },
        "chunkCount": {
          "title": "Chunk Count",
          "type": "integer",
          "minimum": 1
        },
        "groupSymbol": {
          "title": "Group Symbol",
          "type": "string",
          "minLength": 1,
          "maxLength": 25
        },
        "jobName": {
          "title": "Job Name",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "groupName": {
          "title": "Group Name",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "required": [
        "jobName",
        "jobSymbol",
        "groupSymbol"
      ]
    },
    "state": {
      "title": "State",
      "description": "unscheduled: not yet scheduled\npending: not yet started\nrunning: currently in progress\ncompleted: Job ran through to completion\n",
      "type": "string",
      "enum": [
        "unscheduled",
        "pending",
        "running",
        "completed"
      ]
    },
    "result": {
      "title": "Result",
      "description": "fail: A failure\nexception: An infrastructure error/exception\nsuccess: Build/Test executed without error or failure\ncanceled: The job was cancelled by a user\nunknown: When the job is not yet completed\nsuperseded: When a job has been superseded by another job\n",
      "type": "string",
      "enum": [
        "success",
        "fail",
        "exception",
        "canceled",
        "superseded",
        "unknown"
      ]
    },
    "jobKind": {
      "type": "string",
      "default": "other",
      "enum": [
        "build",
        "test",
        "other"
      ]
    },
    "tier": {
      "type": "integer",
      "minimum": 1,
      "maximum": 3
    },
    "coalesced": {
      "description": "The job guids that were coalesced to this job.",
      "title": "Coalesced job GUID",
      "type": "array",
      "items": {
        "title": "Job GUID",
        "type": "string",
        "pattern": "^[\\w/+-]+$",
        "minLength": 1,
        "maxLength": 50
      }
    },
    "timeScheduled": {
      "type": "string",
      "format": "date-time"
    },
    "timeStarted": {
      "type": "string",
      "format": "date-time"
    },
    "timeCompleted": {
      "type": "string",
      "format": "date-time"
    },
    "labels": {
      "title": "Labels",
      "description": "Labels are a dimension of a platform.  The values here can vary wildly,\nso most strings are valid for this.  The list of labels that are used\nis maleable going forward.\n\nThese were formerly known as \"Options\" within \"Option Collections\" but\ncalling labels now so they can be understood to be just strings that\ndenotes a characteristic of the job.\n\nSome examples of labels that have been used:\n  opt    Optimize Compiler GCC optimize flags\n  debug  Debug flags passed in\n  pgo    Profile Guided Optimization - Like opt, but runs with profiling, then builds again using that profiling\n  asan   Address Sanitizer\n  tsan   Thread Sanitizer Build\n",
      "type": "array",
      "items": {
        "title": "Label",
        "type": "string",
        "minLength": 1,
        "maxLength": 50,
        "pattern": "^[\\w-]+$"
      }
    },
    "owner": {
      "description": "Description of who submitted the job: gaia | scheduler name | username | email\n",
      "title": "Owner",
      "type": "string",
      "minLength": 1,
      "maxLength": 50
    },
    "reason": {
      "description": "Examples include:\n- scheduled\n- scheduler\n- Self-serve: Rebuilt by foo@example.com\n- Self-serve: Requested by foo@example.com\n- The Nightly scheduler named 'b2g_mozilla-inbound periodic' triggered this build\n- unknown\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 125
    },
    "productName": {
      "description": "Examples include:\n-  'b2g'\n-  'firefox'\n-  'taskcluster'\n-  'xulrunner'\n",
      "type": "string",
      "minLength": 1,
      "maxLength": 125
    },
    "buildMachine": {
      "$ref": "#/definitions/machine"
    },
    "runMachine": {
      "$ref": "#/definitions/machine"
    },
    "jobInfo": {
      "description": "Definition of the Job Info for a job.  These are extra data\nfields that go along with a job that will be displayed in\nthe details panel within Treeherder.\n",
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "description": "Plain text description of the job and its state.  Submitted with\nthe final message about a task.\n"
        },
        "links": {
          "type": "array",
          "items": {
            "title": "Link",
            "type": "object",
            "description": "List of URLs shown as key/value pairs.  Shown as:\n\"<label>: <linkText>\" where linkText will be a link to the url.\n",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "maxLength": 512
              },
              "linkText": {
                "type": "string",
                "minLength": 1,
                "maxLength": 125
              },
              "label": {
                "type": "string",
                "minLength": 1,
                "maxLength": 70
              }
            },
            "additionalProperties": false,
            "required": [
              "url",
              "linkText",
              "label"
            ]
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "summary",
        "links"
      ]
    },
    "logs": {
      "type": "array",
      "items": {
        "title": "Log",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "maxLength": 255
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "steps": {
            "type": "array",
            "description": "This object defines what is seen in the Treeherder Log Viewer.\nThese values can be submitted here, or they will be generated\nby Treeherder's internal log parsing process from the\nsubmitted log.  If this value is submitted, Treeherder will\nconsider the log already parsed and skip parsing.\n",
            "items": {
              "title": "Step",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "title": "Error",
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "linenumber": {
                        "type": "integer",
                        "minimum": 0
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "line",
                      "linenumber"
                    ]
                  }
                },
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "timeStarted": {
                  "type": "string",
                  "format": "date-time"
                },
                "timeFinished": {
                  "type": "string",
                  "format": "date-time"
                },
                "lineStarted": {
                  "type": "integer",
                  "minimum": 0
                },
                "lineFinished": {
                  "type": "integer",
                  "minimum": 0
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "success",
                    "fail",
                    "exception",
                    "canceled",
                    "unknown"
                  ]
                }
              },
              "required": [
                "name",
                "timeStarted",
                "lineStarted",
                "lineFinished",
                "timeFinished",
                "result"
              ],
              "additionalProperties": false
            }
          },
          "errorsTruncated": {
            "type": "boolean",
            "description": "If true, indicates that the number of errors in the log was too\nlarge and not all of those lines are indicated here.\n"
          }
        },
        "additionalProperties": false,
        "required": [
          "url",
          "name"
        ]
      }
    },
    "extra": {
      "type": "object",
      "description": "Extra information that Treeherder reads on a best-effort basis"
    },
    "version": {
      "type": "integer",
      "description": "Message version",
      "enum": [
        1
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "taskId",
    "origin",
    "buildSystem",
    "display",
    "state",
    "jobKind",
    "version"
  ],
  "definitions": {
    "machine": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[\\w-]+$",
          "minLength": 1,
          "maxLength": 50
        },
        "platform": {
          "type": "string",
          "pattern": "^[\\w-]+$",
          "minLength": 1,
          "maxLength": 100
        },
        "os": {
          "type": "string",
          "pattern": "^[\\w-]+$",
          "minLength": 1,
          "maxLength": 25
        },
        "architecture": {
          "type": "string",
          "pattern": "^[\\w-]+$",
          "minLength": 1,
          "maxLength": 25
        }
      },
      "required": [
        "platform",
        "os",
        "architecture"
      ],
      "additionalProperties": false
    }
  },
  "$id": "/schemas/treeherder/v1/pulse-job.json#"
}