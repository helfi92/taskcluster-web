{
  "$schema": "/schemas/common/api-reference-v0.json#",
  "title": "Taskcluster Secrets API Documentation",
  "description": "The secrets service provides a simple key/value store for small bits of secret\ndata.  Access is limited by scopes, so values can be considered secret from\nthose who do not have the relevant scopes.\n\nSecrets also have an expiration date, and once a secret has expired it can no\nlonger be read.  This is useful for short-term secrets such as a temporary\nservice credential or a one-time signing key.",
  "serviceName": "secrets",
  "apiVersion": "v1",
  "entries": [
    {
      "type": "function",
      "method": "get",
      "route": "/ping",
      "query": [],
      "args": [],
      "name": "ping",
      "stability": "stable",
      "title": "Ping Server",
      "description": "Respond without doing anything.\nThis endpoint is used to check that the service is up."
    },
    {
      "type": "function",
      "method": "put",
      "route": "/secret/<name>",
      "query": [],
      "args": [
        "name"
      ],
      "name": "set",
      "stability": "stable",
      "title": "Set Secret",
      "input": "v1/secret.json#",
      "description": "Set the secret associated with some key.  If the secret already exists, it is\nupdated instead.",
      "scopes": "secrets:set:<name>"
    },
    {
      "type": "function",
      "method": "delete",
      "route": "/secret/<name>",
      "query": [],
      "args": [
        "name"
      ],
      "name": "remove",
      "stability": "stable",
      "title": "Delete Secret",
      "description": "Delete the secret associated with some key.",
      "scopes": "secrets:set:<name>"
    },
    {
      "type": "function",
      "method": "get",
      "route": "/secret/<name>",
      "query": [],
      "args": [
        "name"
      ],
      "name": "get",
      "stability": "stable",
      "title": "Read Secret",
      "output": "v1/secret.json#",
      "description": "Read the secret associated with some key.  If the secret has recently\nexpired, the response code 410 is returned.  If the caller lacks the\nscope necessary to get the secret, the call will fail with a 403 code\nregardless of whether the secret exists.",
      "scopes": "secrets:get:<name>"
    },
    {
      "type": "function",
      "method": "get",
      "route": "/secrets",
      "query": [
        "continuationToken",
        "limit"
      ],
      "args": [],
      "name": "list",
      "stability": "stable",
      "title": "List Secrets",
      "output": "v1/secret-list.json#",
      "description": "List the names of all secrets.\n\nBy default this end-point will try to return up to 1000 secret names in one\nrequest. But it **may return less**, even if more tasks are available.\nIt may also return a `continuationToken` even though there are no more\nresults. However, you can only be sure to have seen all results if you\nkeep calling `listTaskGroup` with the last `continuationToken` until you\nget a result without a `continuationToken`.\n\nIf you are not interested in listing all the members at once, you may\nuse the query-string option `limit` to return fewer."
    }
  ]
}